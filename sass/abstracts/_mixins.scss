@mixin clearfix {
    &::after {
        content:"";
        display:table;
        clear:both;
    }
}

@mixin box-shadow-re-1($opacity) {
    box-shadow: 0 1.5rem 4rem rgba($color-black, $opacity);
}

@mixin center-block {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}


@mixin arrowTransform( $angle, $x: 0, $y: 0 ) {
    i:first-child {
      transform: translate( $x, $y ) rotate( $angle );
    }
  
    i:last-child {
      transform: translate( $x, -$y ) rotate( -$angle );
    }
  }






@mixin respond($breakpoint) {

    // CONVERTING PIXELS INTO EMS

    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content }; // 1200/16
    }

    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content }; // 900/16
    }

    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content }; // 600/16
    }

    @if $breakpoint == sm-dev {
        @media only screen and (max-width: 31.25em) { @content }; // 500/16
    }

    @if $breakpoint == v-sm-dev {
      @media only screen and (max-width: 21.87em) { @content }; // 500/16
  }

    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content }; // 1800/16
    } 
}




@mixin transition-max-height {
    @for $i from 1 through 10 {
      &:nth-child(#{$i}) {
        transition: max-height .5s #{.65 + $i * .02}s ease-in;
      }
    }
  }
  
  @mixin media-sm {
    @media (min-width: 650px) {
      @content;
    }
  }
  
  @mixin alpha-attribute($attribute, $color, $background) {
    $percent: alpha($color) * 100%;
    $opaque: opacify($color, 1);
    $solid-color: mix($opaque, $background, $percent);
    #{$attribute}: $solid-color;
    #{$attribute}: $color;
  }